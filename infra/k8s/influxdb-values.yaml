persistence:
  enabled: false
podAnnotations: {
  cni: "flannel"
}
service:
  type: ClusterIP
  clusterIP: "None"
config:
  reporting_disabled: false
  storage_directory: /var/lib/influxdb
  rpc:
    enabled: true
    bind_address: 8088
  meta:
    bind_address: 8091
    retention_autocreate: true
    logging_enabled: true
    authEnabled: false
  data:
    query_log_enabled: true
    cache_max_memory_size: 1073741824
    cache_snapshot_memory_size: 26214400
    cache_snapshot_write_cold_duration: 10m0s
    compact_full_write_cold_duration: 4h0m0s
    max_series_per_database: 1000000
    max_values_per_tag: 100000
    index_version: inmem
    trace_logging_enabled: false
  coordinator:
    write_timeout: 10s
    max_concurrent_queries: 0
    query_timeout: 0s
    log_queries_after: 0s
    max_select_point: 0
    max_select_series: 0
    max_select_buckets: 0
  retention:
    enabled: true
    check_interval: 30m0s
  shard_precreation:
    enabled: true
    check_interval: 10m0s
    advance_period: 30m0s
  admin:
    enabled: false
    bind_address: 8083
    https_enabled: false
    https_certificate: /etc/ssl/influxdb.pem
  monitor:
    store_enabled: true
    store_database: _internal
    store_interval: 10s
  subscriber:
    enabled: true
    http_timeout: 30s
    insecure_skip_verify: false
    ca_certs: ""
    write_concurrency: 40
    write_buffer_size: 1000
  http:
    enabled: true
    bind_address: 8086
    auth_enabled: false
    flux_enabled: true
    log_enabled: true
    write_tracing: false
    pprof_enabled: true
    https_enabled: false
    https_certificate: /etc/ssl/influxdb.pem
    https_private_key: ""
    max_row_limit: 10000
    max_connection_limit: 0
    shared_secret: "beetlejuicebeetlejuicebeetlejuice"
    realm: InfluxDB
    unix_socket_enabled: false
    bind_socket: /var/run/influxdb.sock
  graphite:
    enabled: false
    bind_address: 2003
    database: graphite
    retention_policy: autogen
    protocol: tcp
    batch_size: 5000
    batch_pending: 10
    batch_timeout: 1s
    consistency_level: one
    separator: .
    udp_read_buffer: 0
    # Uncomment to define graphite templates
    # templates:
    #   - "graphite.metric.*.*.* measurement.run"
  collectd:
    enabled: false
    bind_address: 25826
    database: collectd
    retention_policy: autogen
    batch_size: 5000
    batch_pending: 10
    batch_timeout: 10s
    read_buffer: 0
    typesdb: /usr/share/collectd/types.db
    security_level: none
    auth_file: /etc/collectd/auth_file
  opentsdb:
    enabled: false
    bind_address: 4242
    database: opentsdb
    retention_policy: autogen
    consistency_level: one
    tls_enabled: false
    certificate: /etc/ssl/influxdb.pem
    batch_size: 1000
    batch_pending: 5
    batch_timeout: 1s
    log_point_errors: true
  udp:
    enabled: false
    bind_address: 8089
    database: udp
    retention_policy: autogen
    batch_size: 5000
    batch_pending: 10
    read_buffer: 0
    batch_timeout: 1s
    precision: "ns"
  continuous_queries:
    log_enabled: true
    enabled: true
    run_interval: 1s
  logging:
    format: auto
    level: info
    supress_logo: false

# Allow executing custom init scripts
#
# If the container finds any files with the extensions .sh or .iql inside of the
# /docker-entrypoint-initdb.d folder, it will execute them. The order they are
# executed in is determined by the shell. This is usually alphabetical order.
initScripts:
  enabled: true
  scripts:
    init.iql: |+
      CREATE DATABASE "metrics" WITH DURATION 30d REPLICATION 1 NAME "rp_30d"

backup:
  enabled: false
  schedule: "0 0 * * *"
  annotations: {}

  ## Google Cloud Storage
  # gcs:
  #    serviceAccountSecret: influxdb-backup-key
  #    serviceAccountSecretKey: key.json
  #    destination: gs://bucket/influxdb

  ## Azure
  ## Secret is expected to have connection string stored in `connection-string` field
  ## Existing container will be used or private one withing storage account will be created.
  # azure:
  #   storageAccountSecret: influxdb-backup-azure-key
  #   destination_container: influxdb-container
  #   destination_path: ""
